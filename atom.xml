<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ax-x</title>
  
  <subtitle>以有限的时间，做无限的事情</subtitle>
  <link href="https://ax-x.github.io/atom.xml" rel="self"/>
  
  <link href="https://ax-x.github.io/"/>
  <updated>2022-03-08T12:19:46.172Z</updated>
  <id>https://ax-x.github.io/</id>
  
  <author>
    <name>Ax-x</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>文件包含漏洞个人总结</title>
    <link href="https://ax-x.github.io/2022/03/08/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    <id>https://ax-x.github.io/2022/03/08/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</id>
    <published>2022-03-08T12:16:56.000Z</published>
    <updated>2022-03-08T12:19:46.172Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是文件包含&quot;&gt;&lt;a href=&quot;#什么是文件包含&quot; class=&quot;headerlink&quot; title=&quot;什么是文件包含&quot;&gt;&lt;/a&gt;什么是文件包含&lt;/h2&gt;&lt;p&gt;程序开发人员一般希望代码更灵活，所以将被包含的文件设置为变量，用来进行动态调用，但正是由于这种灵活性，从而导致客户端可以调用一个恶意文件，造成文件包含漏洞。为了控制代码的灵活，程序要把要使用的函数写到一个文件中，其他需要其中的的函数执行，只需要通过该文件名包含进来，而且没有进行验证。&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>文件上传漏洞个人总结</title>
    <link href="https://ax-x.github.io/2022/03/08/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    <id>https://ax-x.github.io/2022/03/08/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</id>
    <published>2022-03-08T09:24:44.000Z</published>
    <updated>2022-03-08T09:35:36.927Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是文件上传&quot;&gt;&lt;a href=&quot;#什么是文件上传&quot; class=&quot;headerlink&quot; title=&quot;什么是文件上传&quot;&gt;&lt;/a&gt;什么是文件上传&lt;/h2&gt;&lt;p&gt;文件上传漏洞是指上传文件的时，如果未对上传的文件进行严格的验证和过滤，就容易造成文件上传漏洞，上传脚本等。用户可以上传了一个可执行的脚本文件，并通过此脚本文件获得了执行服务器端命令的能力。 常见场景是web服务器允许用户上传图片或者普通文本文件保存，而用户绕过上传机制上传恶意代码并执行从而控制服务器。这种漏洞是getshell最快最直接的方法之一，上传文件操作本身是没有问题的，问题在于文件上传到服务器后，服务器怎么处理和解释文件，有文件上传不一定有文件上传漏洞，要看代码情况。&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>关于开深信服VPN无法抓包</title>
    <link href="https://ax-x.github.io/2022/02/17/%E5%85%B3%E4%BA%8E%E5%BC%80%E6%B7%B1%E4%BF%A1%E6%9C%8DVPN%E6%97%A0%E6%B3%95%E6%8A%93%E5%8C%85/"/>
    <id>https://ax-x.github.io/2022/02/17/%E5%85%B3%E4%BA%8E%E5%BC%80%E6%B7%B1%E4%BF%A1%E6%9C%8DVPN%E6%97%A0%E6%B3%95%E6%8A%93%E5%8C%85/</id>
    <published>2022-02-17T02:12:50.000Z</published>
    <updated>2022-02-17T02:14:53.663Z</updated>
    
    
    <summary type="html">&lt;p&gt;前些日子大佬叫去搞渗透，得走深信服的VPN，连上之后发现BP抓不了包了，关闭 BurpSuite 单独用浏览器就可以正常访问，还以为是我电脑问题，后面发现下了VPN之后能正常抓包了。&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>外网渗透信息收集</title>
    <link href="https://ax-x.github.io/2022/02/10/%E5%A4%96%E7%BD%91%E6%B8%97%E9%80%8F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
    <id>https://ax-x.github.io/2022/02/10/%E5%A4%96%E7%BD%91%E6%B8%97%E9%80%8F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</id>
    <published>2022-02-10T01:20:39.000Z</published>
    <updated>2022-02-10T01:28:48.389Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;一、简介&quot;&gt;&lt;a href=&quot;#一、简介&quot; class=&quot;headerlink&quot; title=&quot;一、简介&quot;&gt;&lt;/a&gt;一、简介&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;什么是信息搜集？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;信息搜集也称踩点，信息搜集毋庸置疑就是尽可能的搜集目标的信息，包括端口信息、DNS信息、员工邮箱等等看似并不起眼的一些信息都算是信息搜集，这些看似微乎其微的信息，对于渗透测试而言就关乎到成功与否了。&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>python&amp;&amp;shell--批量跑主机脚本</title>
    <link href="https://ax-x.github.io/2022/01/21/python-shell-%E6%89%B9%E9%87%8F%E8%B7%91%E4%B8%BB%E6%9C%BA%E8%84%9A%E6%9C%AC/"/>
    <id>https://ax-x.github.io/2022/01/21/python-shell-%E6%89%B9%E9%87%8F%E8%B7%91%E4%B8%BB%E6%9C%BA%E8%84%9A%E6%9C%AC/</id>
    <published>2022-01-21T07:56:11.000Z</published>
    <updated>2022-01-21T09:25:26.636Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h1&gt;&lt;p&gt;上周去现场，大佬说年前要跑主机脚本，就是服务器有点多，问有没有办法一键下发，然后执行脚本去跑，跑完之后回收数据，我听这需求，这不是有手就行？然后就应了下来，说我试试，我本以为就是简单的写个py脚本的事情，确认好需求之后就直接开整，刚开始我写的是使用ssh服务去批量搞。&lt;/p&gt;</summary>
    
    
    
    <category term="安全开发" scheme="https://ax-x.github.io/categories/%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="安全工具" scheme="https://ax-x.github.io/tags/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>安全小白怎么从零开始拥有自己的武器库</title>
    <link href="https://ax-x.github.io/2022/01/20/%E5%AE%89%E5%85%A8%E5%B0%8F%E7%99%BD%E6%80%8E%E4%B9%88%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%8B%A5%E6%9C%89%E8%87%AA%E5%B7%B1%E7%9A%84%E6%AD%A6%E5%99%A8%E5%BA%93/"/>
    <id>https://ax-x.github.io/2022/01/20/%E5%AE%89%E5%85%A8%E5%B0%8F%E7%99%BD%E6%80%8E%E4%B9%88%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%8B%A5%E6%9C%89%E8%87%AA%E5%B7%B1%E7%9A%84%E6%AD%A6%E5%99%A8%E5%BA%93/</id>
    <published>2022-01-20T08:47:24.000Z</published>
    <updated>2022-01-20T13:28:48.768Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h1&gt;&lt;p&gt;前些日子跟个大佬搞攻防，看着大佬超神我超鬼，不得不佩服大佬，看着大佬用的很多工具都没见过，问了下这些工具是啥，大佬掏出了他的大宝贝给我看，嚯，好家伙，一整个文件夹都是自己开发的工具还有一些魔改的工具，属实羡慕，看着大佬那些工具，陷入沉思，是不是我也可以有自己的武器库🤨总不能当伸手党吧，而且还能熟悉语言，增强自己在代码审计那块的。刚好之前搞过一段时间的开发，对于开发一些工具啥的还是有自己的想法的，说干就干，这个系列是写安全小白怎么从零开始拥有自己的一个工具库的文章，在开发方面我也是菜鸟，所以可能有些工具的开发思路跟那些流行的工具思路可能不一样，有哪写得不好的地方，希望大佬们能带带我。&lt;/p&gt;</summary>
    
    
    
    <category term="安全开发" scheme="https://ax-x.github.io/categories/%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="安全工具" scheme="https://ax-x.github.io/tags/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>XSS跨站脚本攻击</title>
    <link href="https://ax-x.github.io/2022/01/17/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/"/>
    <id>https://ax-x.github.io/2022/01/17/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/</id>
    <published>2022-01-17T14:56:33.000Z</published>
    <updated>2022-01-21T07:47:53.466Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;什么是XSS-XSS原理&quot;&gt;&lt;a href=&quot;#什么是XSS-XSS原理&quot; class=&quot;headerlink&quot; title=&quot;什么是XSS/XSS原理&quot;&gt;&lt;/a&gt;什么是XSS/XSS原理&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;攻击者嵌入恶意脚本代码到用户会访问到的页面中，用户访问该页面的时候，就引起恶意脚本代码的执行，从而达到恶意攻击用户的目的。攻击者可以使用户在浏览器中执行其预定义的恶意脚本，变量接受数据的时候，数据可以写成js脚本代码，进行回显操作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;本质上属于前端漏洞，产生在浏览器和js代码中的漏洞&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>逻辑越权</title>
    <link href="https://ax-x.github.io/2022/01/16/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83/"/>
    <id>https://ax-x.github.io/2022/01/16/%E9%80%BB%E8%BE%91%E8%B6%8A%E6%9D%83/</id>
    <published>2022-01-16T13:32:30.000Z</published>
    <updated>2022-01-21T07:48:06.528Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;逻辑漏洞&quot;&gt;&lt;a href=&quot;#逻辑漏洞&quot; class=&quot;headerlink&quot; title=&quot;逻辑漏洞&quot;&gt;&lt;/a&gt;&lt;strong&gt;逻辑漏洞&lt;/strong&gt;&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt; 攻击者利用业务的设计缺陷，获取敏感信息或破坏业务的完整性， 其本质就是程序逻辑输入管控不严，没有对用户数据进行严格把控，导致程序不能够正常处理或处理错误，一般出现在登录注册、密码找回、信息查看、交易支付金额等。&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入</title>
    <link href="https://ax-x.github.io/2022/01/16/SQL%E6%B3%A8%E5%85%A5/"/>
    <id>https://ax-x.github.io/2022/01/16/SQL%E6%B3%A8%E5%85%A5/</id>
    <published>2022-01-16T12:32:30.000Z</published>
    <updated>2022-01-21T07:47:44.843Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;sql注入是什么？&quot;&gt;&lt;a href=&quot;#sql注入是什么？&quot; class=&quot;headerlink&quot; title=&quot;sql注入是什么？&quot;&gt;&lt;/a&gt;sql注入是什么？&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;web应用对用户输入数据的合法性没有判断或过滤不严，sql语句中的变量是可控的，导致攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>First Blog</title>
    <link href="https://ax-x.github.io/2022/01/01/First%20Blog/"/>
    <id>https://ax-x.github.io/2022/01/01/First%20Blog/</id>
    <published>2022-01-01T08:24:33.000Z</published>
    <updated>2022-01-20T08:39:23.561Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;p&gt;Welcome to my blog! I’m glad to make friends with you. If you can browse my website, I will be grateful. In the future, I will upload my</summary>
        
      
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
