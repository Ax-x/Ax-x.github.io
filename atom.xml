<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ax-x</title>
  
  <subtitle>以有限的时间，做无限的事情</subtitle>
  <link href="https://ax-x.github.io/atom.xml" rel="self"/>
  
  <link href="https://ax-x.github.io/"/>
  <updated>2022-08-29T06:40:29.045Z</updated>
  <id>https://ax-x.github.io/</id>
  
  <author>
    <name>Ax-x</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序反编译-PC微信版</title>
    <link href="https://ax-x.github.io/2022/08/29/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%8D%E7%BC%96%E8%AF%91-PC%E5%BE%AE%E4%BF%A1%E7%89%88/"/>
    <id>https://ax-x.github.io/2022/08/29/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%8D%E7%BC%96%E8%AF%91-PC%E5%BE%AE%E4%BF%A1%E7%89%88/</id>
    <published>2022-08-29T06:39:44.000Z</published>
    <updated>2022-08-29T06:40:29.045Z</updated>
    
    
    <summary type="html">&lt;p&gt;现在网上也有很多关于小程序反编译的教程，随时间的流逝或许随着微信的更新，有出现编译不成功的现象。&lt;/p&gt;
&lt;p&gt;本篇文章总结一下最新的编译过程，已成功获得小程序源码（有分包的小程序）&lt;/p&gt;</summary>
    
    
    
    <category term="反编译" scheme="https://ax-x.github.io/categories/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序反编译-模拟器版</title>
    <link href="https://ax-x.github.io/2022/08/29/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%8D%E7%BC%96%E8%AF%91-%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%89%88/"/>
    <id>https://ax-x.github.io/2022/08/29/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8F%8D%E7%BC%96%E8%AF%91-%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%89%88/</id>
    <published>2022-08-29T06:31:30.000Z</published>
    <updated>2022-08-29T07:47:25.807Z</updated>
    
    
    <summary type="html">&lt;p&gt;本文主要写如何通过PC手机模拟器获取微信小程序的代码&lt;/p&gt;</summary>
    
    
    
    <category term="反编译" scheme="https://ax-x.github.io/categories/%E5%8F%8D%E7%BC%96%E8%AF%91/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>近源攻击方式总结</title>
    <link href="https://ax-x.github.io/2022/07/19/%E8%BF%91%E6%BA%90%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F%E6%80%BB%E7%BB%93/"/>
    <id>https://ax-x.github.io/2022/07/19/%E8%BF%91%E6%BA%90%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F%E6%80%BB%E7%BB%93/</id>
    <published>2022-07-19T08:40:21.000Z</published>
    <updated>2022-08-30T03:28:14.674Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前段时间身边的大佬去搞攻防，近源攻击挺有成效的，拿了上千的分数，之前自己也有搞过但是一直没用到攻防上面，整理下相关的方式，后续可以参考参考，近源攻击，顾名思义😏你走近点打他，攻击队通过靠近或者位于攻击目标内部，利用各类智能设备、通信技术、物理接口等方法进行突破，也就是说，攻防期间，除了待在小黑屋里面坐牢，还可以接近目标现场，通过现场的环境进行渗透突破，达到进入内网，获取数据的目的，比起在网上打点，近源攻击能够又快又准的进入目标内网，且方法多种多样，成功率很高，但是有点随缘，运气不好的话，可能你丢的Badusb被保洁阿姨丢掉了或者被保安抓了也不一定，关键还是运气和苟住🤔&lt;/p&gt;</summary>
    
    
    
    <category term="近源攻击" scheme="https://ax-x.github.io/categories/%E8%BF%91%E6%BA%90%E6%94%BB%E5%87%BB/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="近源攻击" scheme="https://ax-x.github.io/tags/%E8%BF%91%E6%BA%90%E6%94%BB%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>不出网主机的几种上线方式</title>
    <link href="https://ax-x.github.io/2022/05/31/%E4%B8%8D%E5%87%BA%E7%BD%91%E4%B8%BB%E6%9C%BA%E7%9A%84%E5%87%A0%E7%A7%8D%E4%B8%8A%E7%BA%BF%E6%96%B9%E5%BC%8F/"/>
    <id>https://ax-x.github.io/2022/05/31/%E4%B8%8D%E5%87%BA%E7%BD%91%E4%B8%BB%E6%9C%BA%E7%9A%84%E5%87%A0%E7%A7%8D%E4%B8%8A%E7%BA%BF%E6%96%B9%E5%BC%8F/</id>
    <published>2022-05-31T07:22:01.000Z</published>
    <updated>2022-05-31T07:25:13.143Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;拿到一台边缘机器后，内网的机器很有可能大多数都不出网，这时又想上线cs方便后续操作。本文就如何上线不出网主机的方式进行了总结。&lt;/p&gt;</summary>
    
    
    
    <category term="内网渗透" scheme="https://ax-x.github.io/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>反弹shell合集</title>
    <link href="https://ax-x.github.io/2022/05/13/%E5%8F%8D%E5%BC%B9shell%E5%90%88%E9%9B%86/"/>
    <id>https://ax-x.github.io/2022/05/13/%E5%8F%8D%E5%BC%B9shell%E5%90%88%E9%9B%86/</id>
    <published>2022-05-13T08:25:02.000Z</published>
    <updated>2022-05-13T08:27:37.067Z</updated>
    
    
    <summary type="html">&lt;p&gt;假设本机地址10.10.10.11，监听端口443。&lt;/p&gt;
&lt;h2 id=&quot;Bash环境下反弹TCP协议shell&quot;&gt;&lt;a href=&quot;#Bash环境下反弹TCP协议shell&quot; class=&quot;headerlink&quot; title=&quot;Bash环境下反弹TCP协议shell&quot;&gt;&lt;/a&gt;Bash环境下反弹TCP协议shell&lt;/h2&gt;&lt;p&gt;首先在本地监听TCP协议443端口&lt;/p&gt;
&lt;figure class=&quot;highlight apache&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;nc&lt;/span&gt; -lvp &lt;span class=&quot;number&quot;&gt;443&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="内网渗透" scheme="https://ax-x.github.io/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>word文档批量处理脚本</title>
    <link href="https://ax-x.github.io/2022/05/13/word%E6%96%87%E6%A1%A3%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/"/>
    <id>https://ax-x.github.io/2022/05/13/word%E6%96%87%E6%A1%A3%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86%E8%84%9A%E6%9C%AC/</id>
    <published>2022-05-13T07:09:24.000Z</published>
    <updated>2022-05-13T07:30:28.625Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;公司让去客户现场了，去了那边的工作不是很难，但是很繁琐，特别是word的文档处理这块，经常要处理几十个文档就很烦，挣扎了下还是打算写个脚本来批量处理这些事情，总不能因为这些事情耽误了自己进步（摸鱼）吧？由于之前没接触过py在word文档处理这块的东西，所以还是踩了一些坑的，写一下，后续有用到可以避避坑。&lt;/p&gt;</summary>
    
    
    
    <category term="安全开发" scheme="https://ax-x.github.io/categories/%E5%AE%89%E5%85%A8%E5%BC%80%E5%8F%91/"/>
    
    
    <category term="自动化脚本" scheme="https://ax-x.github.io/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>记一次windows应急响应</title>
    <link href="https://ax-x.github.io/2022/04/24/%E8%AE%B0%E4%B8%80%E6%AC%A1windows%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    <id>https://ax-x.github.io/2022/04/24/%E8%AE%B0%E4%B8%80%E6%AC%A1windows%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/</id>
    <published>2022-04-23T18:11:30.000Z</published>
    <updated>2022-04-23T18:19:52.674Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;1、背景&quot;&gt;&lt;a href=&quot;#1、背景&quot; class=&quot;headerlink&quot; title=&quot;1、背景&quot;&gt;&lt;/a&gt;1、背景&lt;/h1&gt;&lt;p&gt;大好假期，人在家中躺，应急天上来，上了机子之后过程还算是比较顺利的，环境是Tomcat，大致思路就是，排查可疑用户和文件，看日志，连接情况，进程，定时任务，注册表这些。&lt;/p&gt;</summary>
    
    
    
    <category term="应急响应" scheme="https://ax-x.github.io/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>排序算法</title>
    <link href="https://ax-x.github.io/2022/03/25/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/"/>
    <id>https://ax-x.github.io/2022/03/25/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</id>
    <published>2022-03-25T02:47:10.000Z</published>
    <updated>2022-03-25T02:49:04.671Z</updated>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;直接插入排序，将一个记录插入到已排序好的有序表中，从而得到一个新，记录数增1的有序表。即：先将序列的第1个记录看成是一个&lt;strong&gt;有序的子序列&lt;/strong&gt;，然后从第2个记录逐个进行插入，直至&lt;strong&gt;整个序列&lt;/strong&gt;有序为止。&lt;/li&gt;&lt;/ol&gt;</summary>
    
    
    
    <category term="算法" scheme="https://ax-x.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>常见端口攻击方式</title>
    <link href="https://ax-x.github.io/2022/03/08/%E5%B8%B8%E8%A7%81%E7%AB%AF%E5%8F%A3%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/"/>
    <id>https://ax-x.github.io/2022/03/08/%E5%B8%B8%E8%A7%81%E7%AB%AF%E5%8F%A3%E6%94%BB%E5%87%BB%E6%96%B9%E5%BC%8F/</id>
    <published>2022-03-08T12:45:37.000Z</published>
    <updated>2022-03-08T12:47:56.171Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;远程管理端口&quot;&gt;&lt;a href=&quot;#远程管理端口&quot; class=&quot;headerlink&quot; title=&quot;远程管理端口&quot;&gt;&lt;/a&gt;远程管理端口&lt;/h2&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>常规绕WAF思路</title>
    <link href="https://ax-x.github.io/2022/03/08/%E5%B8%B8%E8%A7%84%E7%BB%95WAF%E6%80%9D%E8%B7%AF/"/>
    <id>https://ax-x.github.io/2022/03/08/%E5%B8%B8%E8%A7%84%E7%BB%95WAF%E6%80%9D%E8%B7%AF/</id>
    <published>2022-03-08T12:44:54.000Z</published>
    <updated>2022-03-08T12:45:23.174Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;1、错误的HTTP请求头&quot;&gt;&lt;a href=&quot;#1、错误的HTTP请求头&quot; class=&quot;headerlink&quot; title=&quot;1、错误的HTTP请求头&quot;&gt;&lt;/a&gt;1、错误的HTTP请求头&lt;/h2&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;类似文件上传时的绕过，通过畸形的HTTP协议头绕过WAF检测。比如绕过某些老版本WAF可以加入请求头：&lt;span class=&quot;attribute&quot;&gt;Content&lt;/span&gt;-Encoding:deflate就可以绕过WAF（此方法在文件上传绕过WAF中也适用）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>RCE漏洞</title>
    <link href="https://ax-x.github.io/2022/03/08/RCE%E6%BC%8F%E6%B4%9E/"/>
    <id>https://ax-x.github.io/2022/03/08/RCE%E6%BC%8F%E6%B4%9E/</id>
    <published>2022-03-08T12:33:37.000Z</published>
    <updated>2022-03-08T12:34:18.279Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;RCE漏洞是对命令执行/代码执行类漏洞的统称。这类漏洞因为可以通过网络远程执行命令或代码，可以直接获取一定权限，会造成较严重的影响，因此属于较高危的一类漏洞&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>SSRF服务器端请求伪造</title>
    <link href="https://ax-x.github.io/2022/03/08/SSRF%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0/"/>
    <id>https://ax-x.github.io/2022/03/08/SSRF%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0/</id>
    <published>2022-03-08T12:30:40.000Z</published>
    <updated>2022-03-12T17:58:02.224Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;SSRF服务器端请求伪造是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>CSRF 跨站请求伪造漏洞</title>
    <link href="https://ax-x.github.io/2022/03/08/CSRF-%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0%E6%BC%8F%E6%B4%9E/"/>
    <id>https://ax-x.github.io/2022/03/08/CSRF-%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0%E6%BC%8F%E6%B4%9E/</id>
    <published>2022-03-08T12:28:25.000Z</published>
    <updated>2022-03-08T12:29:02.601Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;CSRF跨站请求伪造，由客户端发起，是一种劫持受信任用户向服务器发送非预期请求的攻击方式，与XSS相似，但比XSS更难防范，常与XSS一起配合攻击&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>文件下载漏洞个人总结</title>
    <link href="https://ax-x.github.io/2022/03/08/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E6%BC%8F%E6%B4%9E%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    <id>https://ax-x.github.io/2022/03/08/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E6%BC%8F%E6%B4%9E%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</id>
    <published>2022-03-08T12:25:02.000Z</published>
    <updated>2022-03-08T12:26:00.370Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;/a&gt;原理&lt;/h2&gt;&lt;p&gt;文件下载功能没有对下载的文件类型、目录做合理严谨的过滤， 利用路径回溯符…/跳出程序本身的限制目录实现来下载任意文件，导致用户可以下载服务器的任意文件。&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>文件包含漏洞个人总结</title>
    <link href="https://ax-x.github.io/2022/03/08/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    <id>https://ax-x.github.io/2022/03/08/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</id>
    <published>2022-03-08T12:16:56.000Z</published>
    <updated>2022-03-08T12:19:46.172Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是文件包含&quot;&gt;&lt;a href=&quot;#什么是文件包含&quot; class=&quot;headerlink&quot; title=&quot;什么是文件包含&quot;&gt;&lt;/a&gt;什么是文件包含&lt;/h2&gt;&lt;p&gt;程序开发人员一般希望代码更灵活，所以将被包含的文件设置为变量，用来进行动态调用，但正是由于这种灵活性，从而导致客户端可以调用一个恶意文件，造成文件包含漏洞。为了控制代码的灵活，程序要把要使用的函数写到一个文件中，其他需要其中的的函数执行，只需要通过该文件名包含进来，而且没有进行验证。&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>文件上传漏洞个人总结</title>
    <link href="https://ax-x.github.io/2022/03/08/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    <id>https://ax-x.github.io/2022/03/08/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/</id>
    <published>2022-03-08T09:24:44.000Z</published>
    <updated>2022-03-08T09:35:36.927Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;什么是文件上传&quot;&gt;&lt;a href=&quot;#什么是文件上传&quot; class=&quot;headerlink&quot; title=&quot;什么是文件上传&quot;&gt;&lt;/a&gt;什么是文件上传&lt;/h2&gt;&lt;p&gt;文件上传漏洞是指上传文件的时，如果未对上传的文件进行严格的验证和过滤，就容易造成文件上传漏洞，上传脚本等。用户可以上传了一个可执行的脚本文件，并通过此脚本文件获得了执行服务器端命令的能力。 常见场景是web服务器允许用户上传图片或者普通文本文件保存，而用户绕过上传机制上传恶意代码并执行从而控制服务器。这种漏洞是getshell最快最直接的方法之一，上传文件操作本身是没有问题的，问题在于文件上传到服务器后，服务器怎么处理和解释文件，有文件上传不一定有文件上传漏洞，要看代码情况。&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Air Cargo Management System v1.0存在SQL注入漏洞</title>
    <link href="https://ax-x.github.io/2022/03/08/Air-Cargo-Management-System-v1-0%E5%AD%98%E5%9C%A8SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/"/>
    <id>https://ax-x.github.io/2022/03/08/Air-Cargo-Management-System-v1-0%E5%AD%98%E5%9C%A8SQL%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E/</id>
    <published>2022-03-08T01:13:19.000Z</published>
    <updated>2022-08-30T08:15:22.387Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;一、漏洞介绍&quot;&gt;&lt;a href=&quot;#一、漏洞介绍&quot; class=&quot;headerlink&quot; title=&quot;一、漏洞介绍&quot;&gt;&lt;/a&gt;一、漏洞介绍&lt;/h1&gt;&lt;p&gt;Air Cargo Management System是一款航空货运管理系统。该系统包含不同的相关模块，例如交易。它有两个用户界面，即管理面板和公共端，Air Cargo Management System存在SQL注入漏洞，攻击者可以利用漏洞获取数据库数据权限等。&lt;/p&gt;</summary>
    
    
    
    <category term="代码审计" scheme="https://ax-x.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="PHP代码审计" scheme="https://ax-x.github.io/tags/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>College Website Content Management System v1.0存在任意文件删除漏洞</title>
    <link href="https://ax-x.github.io/2022/03/08/College-Website-Content-Management-System-v1-0%E5%AD%98%E5%9C%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E/"/>
    <id>https://ax-x.github.io/2022/03/08/College-Website-Content-Management-System-v1-0%E5%AD%98%E5%9C%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4%E6%BC%8F%E6%B4%9E/</id>
    <published>2022-03-08T01:13:19.000Z</published>
    <updated>2022-08-30T08:15:35.291Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;一、-漏洞介绍&quot;&gt;&lt;a href=&quot;#一、-漏洞介绍&quot; class=&quot;headerlink&quot; title=&quot;一、 漏洞介绍&quot;&gt;&lt;/a&gt;一、 漏洞介绍&lt;/h1&gt;&lt;p&gt;College Website - Content Management System是一款校园管理CMS,可以对学生以及学生成绩进行管理，使用PHP语言编写，该CMS存在任意文件删除漏洞，可以删除服务器上的任意文件，该CMS存在任意文件删除漏洞，可以删除服务器上的任意文件。&lt;/p&gt;</summary>
    
    
    
    <category term="代码审计" scheme="https://ax-x.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="PHP代码审计" scheme="https://ax-x.github.io/tags/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>TaoCMS存在代码执行漏洞</title>
    <link href="https://ax-x.github.io/2022/03/08/TaoCMS%E5%AD%98%E5%9C%A8%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
    <id>https://ax-x.github.io/2022/03/08/TaoCMS%E5%AD%98%E5%9C%A8%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/</id>
    <published>2022-03-08T01:13:19.000Z</published>
    <updated>2022-08-30T08:15:16.215Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;一、漏洞介绍&quot;&gt;&lt;a href=&quot;#一、漏洞介绍&quot; class=&quot;headerlink&quot; title=&quot;一、漏洞介绍&quot;&gt;&lt;/a&gt;一、漏洞介绍&lt;/h1&gt;&lt;p&gt;TaoCMS是基于php+sqlite/mysql的国内最小(100Kb左右)的功能完善的CMS管理系统taoCMS-基于php+sqlite最小巧的CMS，TaoCMS系统存在代码执行漏洞，可以执行任意php文件。&lt;/p&gt;</summary>
    
    
    
    <category term="代码审计" scheme="https://ax-x.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    <category term="PHP代码审计" scheme="https://ax-x.github.io/tags/PHP%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>关于开深信服VPN无法抓包</title>
    <link href="https://ax-x.github.io/2022/02/17/%E5%85%B3%E4%BA%8E%E5%BC%80%E6%B7%B1%E4%BF%A1%E6%9C%8DVPN%E6%97%A0%E6%B3%95%E6%8A%93%E5%8C%85/"/>
    <id>https://ax-x.github.io/2022/02/17/%E5%85%B3%E4%BA%8E%E5%BC%80%E6%B7%B1%E4%BF%A1%E6%9C%8DVPN%E6%97%A0%E6%B3%95%E6%8A%93%E5%8C%85/</id>
    <published>2022-02-17T02:12:50.000Z</published>
    <updated>2022-02-17T02:14:53.663Z</updated>
    
    
    <summary type="html">&lt;p&gt;前些日子大佬叫去搞渗透，得走深信服的VPN，连上之后发现BP抓不了包了，关闭 BurpSuite 单独用浏览器就可以正常访问，还以为是我电脑问题，后面发现下了VPN之后能正常抓包了。&lt;/p&gt;</summary>
    
    
    
    <category term="web安全" scheme="https://ax-x.github.io/categories/web%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="学习笔记" scheme="https://ax-x.github.io/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
